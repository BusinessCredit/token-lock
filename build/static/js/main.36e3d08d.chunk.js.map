{"version":3,"sources":["utility/fetch.jsx","component/table.jsx","component/main.jsx","App.js","serviceWorker.js","index.js"],"names":["api_url","CustomTable","rowCount","_this","props","data","length","index","_ref","timestamp_utc","Date","this","timeStamp","value_bcac","value","Math","pow","Object","objectSpread","toUTCString","_this2","react_default","a","createElement","es","disableHeight","_ref2","width","ref","height","headerHeight","rowHeight","rowClassName","_rowClassName","rowGetter","bind","rowRenderer","_RowRenderer","dataKey","label","disableSort","Component","Main","callback","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","inputValue","query","queryResult","result","setState","fetch","then","res","json","address","catch","error","console","log","table","map","reduce","b","_this3","className","onChange","evt","target","onClick","onQuery","generateTotalValue","generateResult","App","component_main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36e3d08d.chunk.js","sourcesContent":["const bcac_contract_address = \"0xe36df5bb57e80629cfc28a31e5f794071c085eca\"\nconst api_url = \"https://api.etherscan.io/api?\" +\n  \"module=account&action=tokentx&sort=desc&apikey=Q8ZFPV5MXG4PFK7EPHRBPJGMXWGH9YRR8I\" +\n  \"&contractaddress=\" + bcac_contract_address\n\n// &page=1&offset=100\n// contractaddress=0xe36df5bb57e80629cfc28a31e5f794071c085eca&address=0xbd54a30efb06644a8ec71cdd5415e2563d5643f0\n\nexport default function fetch_bcac_lock(address, callback) {\n  const requestUrl = api_url +\n    \"&address=\" + address +\n    \"&page=\" + 1 +\n    \"&offset=\" + 1000\n\n  fetch(requestUrl).then(\n    res => res.json()\n  ).then(\n    json => {\n      //const result = parse_bcac_tx(json, address)\n      callback(json.result)\n    }\n  ).catch(\n    error => {\n      console.log(error)\n      callback([])\n    }\n  )\n}\n\nfunction parse_bcac_tx(jsonResponse, address) {\n  return jsonResponse.result.filter(\n    (result) => result.to === address\n  )\n}\n\nexport function fetch_bcac_all(callback) {\n  const requestUrl = api_url +\n    \"&page=\" + 1 +\n    \"&offset=\" + 100\n\n  fetch(requestUrl).then(\n    res => res.json()\n  ).then(\n    json => {\n      callback(json.result)\n    }\n  )\n}","import React, { Component } from 'react';\nimport { Column, Table, AutoSizer } from 'react-virtualized'\n\nclass CustomTable extends Component {\n  rowCount = ()=>{\n    return this.props.data.length\n  }\n  rowGetter({ index }){\n    const timestamp_utc = new Date(this.props.data[index].timeStamp * 1000)\n    const value_bcac = this.props.data[index].value / 10 ** 18\n    return {\n      ...this.props.data[index],\n      timestamp_utc: timestamp_utc.toUTCString(),\n      value_bcac: value_bcac\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <Table\n              ref=\"Table\"\n              height={320}\n              headerHeight={40}\n              rowHeight={40}\n              rowClassName={this._rowClassName}\n              rowGetter={this.rowGetter.bind(this)}\n              rowCount={this.rowCount()}\n              rowRenderer={this._RowRenderer}\n              width={width * 0.8}>\n              <Column\n                dataKey=\"blockNumber\"\n                label=\"区块号\"\n                disableSort\n                width={90}\n              />\n              <Column\n                width={300}\n                disableSort\n                dataKey=\"from\"\n                label=\"转出地址\"\n              />\n              <Column\n                width={300}\n                disableSort\n                dataKey=\"to\"\n                label=\"转入地址\"\n              />\n              <Column\n                width={100}\n                disableSort\n                dataKey=\"value_bcac\"\n                label=\"BCAC\"\n              />\n              <Column\n                width={280}\n                disableSort\n                dataKey=\"timestamp_utc\"\n                label=\"时间\"\n              />\n            </Table>\n          )}\n        </AutoSizer>\n      </div>\n    )\n  }\n\n}\n\nexport default CustomTable;\n\n\n","import React, { Component } from 'react';\nimport fetch_bcac_lock, {fetch_bcac_all} from '../utility/fetch'\nimport QueryResultTable from './table'\nimport './main.css';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      query: false,\n      queryResult: []\n    };\n\n    fetch_bcac_all(\n      (result) => {\n        this.setState({ queryResult: result, query: false})\n      }\n    )\n  }\n\n  onQuery(){\n    fetch_bcac_lock(this.state.inputValue,\n      (result)=>{\n        this.setState({ queryResult: result,  query: true})\n      }\n    )\n  }\n\n  generateResult(){\n    return (\n      <QueryResultTable data = {this.state.queryResult} />\n    )\n  }\n\n  generateTotalValue(){\n    if(this.state.query === true)\n      return this.state.queryResult.map(\n        result => result.value / 10 ** 18\n      ).reduce(\n        (a, b) => a + b\n      )\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          BCAC 锁仓查询\n        </div>\n        <div className=\"input\">\n          <div className=\"input_label\">以太坊地址</div>\n          <input value={this.state.inputValue} onChange={evt=>this.setState({inputValue:evt.target.value})}/>\n          <button onClick={this.onQuery.bind(this)}> 查询 </button>\n        </div>\n        <div className=\"lock_number\">\n          总锁仓量 : {this.generateTotalValue()}\n        </div>\n\n        <div className=\"tx_table\">\n          {this.generateResult()}\n        </div>\n\n        <div className=\"lock_number\">\n          未来收益 : {0}\n        </div>\n        <div className=\"tx_table\">\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n\n// const mock_data = [\n//   {\"blockNumber\":\"6483522\",\"timeStamp\":\"1539099613\",\"hash\":\"0xa3a938a6677792ed76875db445b1dcdc7d147e99e1cfe9b44b7e226101adb0c2\",\"nonce\":\"543\",\"blockHash\":\"0x0ea2e7fb7e649e3f05f2370d9b512cf604e9682d7f41ff87002009e91e594743\",\"from\":\"0xbd54a30efb06644a8ec71cdd5415e2563d5643f0\",\"contractAddress\":\"0xe36df5bb57e80629cfc28a31e5f794071c085eca\",\"to\":\"0x87d6303da6886515cbe242aeb43132216310b150\",\"value\":\"21460171416737305000000000\",\"tokenName\":\"\",\"tokenSymbol\":\"\",\"tokenDecimal\":\"\",\"transactionIndex\":\"39\",\"gas\":\"6612388\",\"gasPrice\":\"9000000000\",\"gasUsed\":\"36752\",\"cumulativeGasUsed\":\"1340126\",\"input\":\"0xa9059cbb00000000000000000000000087d6303da6886515cbe242aeb43132216310b15000000000000000000000000000000000000000000011c05e393da56a0179ba00\",\"confirmations\":\"47364\"},\n//   {\"blockNumber\":\"6483507\",\"timeStamp\":\"1539099391\",\"hash\":\"0x5574a185d5b190a5318c7aa5816552918a7a4957ac3f65f374e7eaf2c2784b9d\",\"nonce\":\"51\",\"blockHash\":\"0xef2ab21c72791481d970ac1d4a335f822a652f72c434f5c7d818ed3348934a64\",\"from\":\"0x18a744e4564601a5241c910aa0cd69aee82287a8\",\"contractAddress\":\"0xe36df5bb57e80629cfc28a31e5f794071c085eca\",\"to\":\"0xbd54a30efb06644a8ec71cdd5415e2563d5643f0\",\"value\":\"15000000000000000000000000\",\"tokenName\":\"\",\"tokenSymbol\":\"\",\"tokenDecimal\":\"\",\"transactionIndex\":\"40\",\"gas\":\"54936\",\"gasPrice\":\"8000000000\",\"gasUsed\":\"36624\",\"cumulativeGasUsed\":\"1531550\",\"input\":\"0xa9059cbb000000000000000000000000bd54a30efb06644a8ec71cdd5415e2563d5643f00000000000000000000000000000000000000000000c685fa11e01ec6f000000\",\"confirmations\":\"47379\"},\n//   {\"blockNumber\":\"6483253\",\"timeStamp\":\"1539095652\",\"hash\":\"0xff4ed78b30ceff9320942d48776194dcb56b5c1fcee0bc64fa0429c0cdd303cd\",\"nonce\":\"527\",\"blockHash\":\"0xbf1007478d4e139e59f6c3824951515ba08c9f00d0867c23ada85db8cdfa0a60\",\"from\":\"0xbd54a30efb06644a8ec71cdd5415e2563d5643f0\",\"contractAddress\":\"0xe36df5bb57e80629cfc28a31e5f794071c085eca\",\"to\":\"0x87d6303da6886515cbe242aeb43132216310b150\",\"value\":\"6892768333336248000000000\",\"tokenName\":\"\",\"tokenSymbol\":\"\",\"tokenDecimal\":\"\",\"transactionIndex\":\"6\",\"gas\":\"6612388\",\"gasPrice\":\"9000000000\",\"gasUsed\":\"36752\",\"cumulativeGasUsed\":\"308140\",\"input\":\"0xa9059cbb00000000000000000000000087d6303da6886515cbe242aeb43132216310b15000000000000000000000000000000000000000000005b399b856a588d44d3000\",\"confirmations\":\"47633\"},\n//   {\"blockNumber\":\"6483106\",\"timeStamp\":\"1539093714\",\"hash\":\"0x19461275e0d91bfa5f6222a11ec8d3810c6d2fb5efef0d7c2247d18aeef233d0\",\"nonce\":\"506\",\"blockHash\":\"0x664c5439945b25479dc0a70c04abf04ab9b8c8c3348f2fe8019ad2b7909140f1\",\"from\":\"0xbd54a30efb06644a8ec71cdd5415e2563d5643f0\",\"contractAddress\":\"0xe36df5bb57e80629cfc28a31e5f794071c085eca\",\"to\":\"0x87d6303da6886515cbe242aeb43132216310b150\",\"value\":\"9674355833334758000000000\",\"tokenName\":\"\",\"tokenSymbol\":\"\",\"tokenDecimal\":\"\",\"transactionIndex\":\"3\",\"gas\":\"6612388\",\"gasPrice\":\"9000000000\",\"gasUsed\":\"36688\",\"cumulativeGasUsed\":\"403553\",\"input\":\"0xa9059cbb00000000000000000000000087d6303da6886515cbe242aeb43132216310b15000000000000000000000000000000000000000000008009fe16eabfbff7f7c00\",\"confirmations\":\"47780\"}\n// ]","import React, { Component } from 'react';\nimport Main from './component/main'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'react-virtualized/styles.css'; // only needs to be imported once\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}